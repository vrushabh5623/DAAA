#include <stdio.h>
#include <stdlib.h>

#define MAX_VERTICES 100

int graph[MAX_VERTICES][MAX_VERTICES];
int color[MAX_VERTICES];
int num_vertices;

int is_safe(int vertex, int color_to_try) {
    for (int i = 0; i < num_vertices; i++) {
        if (graph[vertex][i] && color[i] == color_to_try) {
            return 0;
        }
    }
    return 1;
}

int graph_coloring(int vertex) {
    if (vertex == num_vertices) {
        return 1; // All vertices are colored successfully
    }

    for (int i = 1; i <= num_vertices; i++) {
        if (is_safe(vertex, i)) {
            color[vertex] = i;
            if (graph_coloring(vertex + 1)) {
                return 1;
            }
            color[vertex] = 0; // Backtrack
        }
    }

    return 0; // No color found for the current vertex
}

int main() {
    printf("Enter the number of vertices: ");
    scanf("%d", &num_vertices);

    printf("Enter the adjacency matrix:\n");
    for (int i = 0; i < num_vertices; i++) {
        for (int j = 0; j < num_vertices; j++) {
            scanf("%d", &graph[i][j]);
        }
    }

    if (graph_coloring(0)) {
        printf("Graph coloring is possible.\n");
        for (int i = 0; i < num_vertices; i++) {
            printf("Vertex %d: Color %d\n", i + 1, color[i]);
        }
    } else {
        printf("Graph coloring is not possible.\n");
    }

    return 0;
}
